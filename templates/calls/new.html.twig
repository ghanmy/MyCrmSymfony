{% extends 'base.html.twig' %}

{% block title %}Nouveau appel{% endblock %}
{% block stylesheets %}
    {{ parent() }}
{% endblock %}
{% block body %}
    <div class="app-title">
        <div>
            <h1><i class="fa fa-phone"></i> Appels</h1>
        </div>
        <ul class="app-breadcrumb breadcrumb">
            <li class="breadcrumb-item"><a href="{{ path("home") }}"><i class="fa fa-home fa-lg"></i></a></li>
            <li class="breadcrumb-item"><a href="{{ path("calls_index") }}">Appels</a></li>

        </ul>
    </div>
    <div class="row">
        <div class="col-md-4">
            {# read and display several types of flash messages #}
            {% for label, messages in app.flashes(['success', 'warning','danger']) %}
                {% for message in messages %}
                    <div class="alert alert-dismissible alert-{{ label }}">
                        {{ message }}
                    </div>
                {% endfor %}
            {% endfor %}
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h5 class="box-title">Nouveau appel</h5>
                </div><!-- /.box-header -->

                <div class="box-body">
                    {{ include('calls/_form.html.twig', {'button_label': 'Enregistrer'}) }}

                </div>
            </div>
        </div>
        <div class="col-md-8">
            {{ include('calls/index.html.twig') }}
        </div>
    </div>
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script src="{{ asset('dist/js/plugins/select2.min.js') }}"></script>
    <script src="{{ asset('dist/js/plugins/gijgo.min.js') }}"></script>
    <script>
        function formatDate(date) {
            var d = new Date(date),
                month = '' + (d.getMonth() + 1),
                day = '' + d.getDate(),
                year = d.getFullYear();

            if (month.length < 2) month = '0' + month;
            if (day.length < 2) day = '0' + day;

            return [day, month, year].join('-');
        }
        function formatTime(date) {
            var d = new Date(date),
                hours = '' + d.getHours(),
                minutes = '' + d.getDate();

            return [hours, minutes].join(':');
        }
        jQuery(document).ready(function() {
            var date = new Date();
            var today = new Date(date.getFullYear(), date.getMonth(), date.getDate(),date.getHours(),date.getMinutes());
            $('.calldate').datepicker(
                {
                    format: 'dd-mm-yyyy',
                    uiLibrary: 'bootstrap4',
                    value: formatDate(today),
                    maxDate: today,
                    minDate: function() {
                        var date = new Date();
                        date.setDate(date.getDate()-7);
                        return new Date(date.getFullYear(), date.getMonth(), date.getDate());
                    }
                });

            $('.nextcalldate').datepicker(
                {
                    format: 'dd-mm-yyyy',
                    uiLibrary: 'bootstrap4',
                });
            $('.calltime').timepicker(
                {
                    uiLibrary: 'bootstrap4',
                    value:formatTime(today)
                });
            $('.nextcalltime').timepicker(
                {
                    uiLibrary: 'bootstrap4'
                });
        });
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.7/js/select2.min.js"></script>
    <script>
        $(document).ready(function() {
            $('.select2tags').select2();
            $('#listcalls').initDataTables({{ datatable_settings(datatable) }}, {
                buttons: [
                    'copy',
                    { extend: 'pdf', title: 'domains'},
                    { extend: 'print' }
                ]});
        });
        $(document).ready(function() {
            $('.select2tags').select2();
            $('#calls_prospect').change();
            $('.as-form').on('click',function(){
                alert($(this).data('method'))
                var $form = $('<form/>').hide();

                //form options
                $form.attr({
                    'action' : $(this).attr('href'),
                    'method':'post'
                })

                //adding the _method hidden field
                $form.append($('<input/>',{
                    type:'hidden',
                    name:'_method'
                }).val($(this).data('method')));

                //adding a CSRF if needs
                if ($(this).data('csrf'))
                {
                    var csrf = $(this).data('csrf').split(':');
                    $form.append($('<input/>',{
                        type:'hidden',
                        name:csrf[0]
                    }).val(csrf[1]));
                }

                //add form to parent node
                $(this).parent().append($form);

                $form.submit();

                return false;
            });

        });
        $('#calls_prospect').change(function () {
            var prospectSelector = $(this);
            if(prospectSelector!="" && prospectSelector!= null && typeof prospectSelector!= "undefined"){
                // Request the contacts of the selected prospect.
                $.ajax({
                    url: "{{ path('prospect_list_contacts') }}",
                    type: "GET",
                    dataType: "JSON",
                    data: {
                        prospectid: prospectSelector.val()
                    },
                    success: function (contacts) {
                        var contactSelect = $("#calls_contact");
                        // Remove current options
                        contactSelect.html('');

                        // Empty value ...
                        contactSelect.append('<option value> Choisir un contact de ' + prospectSelector.find("option:selected").text() + ' ...</option>');


                        $.each(contacts, function (key, contact) {
                            contactSelect.append('<option value="' + contact.id + '">' + contact.name + '</option>');
                        });
                    },
                    error: function (err) {
                        alert("An error ocurred while loading data ...");
                    }
                });
            }

        });

    </script>
{% endblock %}



